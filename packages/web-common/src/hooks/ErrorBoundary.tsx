import React, { Component } from 'react';
import { apiHolder as api, apis, conf, ErrorReportApi, DataTrackerApi } from 'api';
const systemApi = api.api.getSystemApi();
const loggerApi = api.api.requireLogicalApi(apis.loggerApiImpl) as DataTrackerApi;
const errorReportApi: ErrorReportApi = api.api.requireLogicalApi(apis.errorReportImpl) as unknown as ErrorReportApi;
const trackerApi = api.api.requireLogicalApi(apis.dataTrackerApiImp) as DataTrackerApi;
const isElectron = systemApi.isElectron();
const dsn = isElectron ? conf('sentryElectronUrl') : conf('sentryWebUrl');
const env = conf('stage') || process.env.NODE_ENV;
// import Button from '@web-common/components/UI/Button';
import Button from '@lingxi-common-component/sirius-ui/Button';

const PROP_MAXLEN = 255;

const getMoreErrorDetail = (errorDetailStr: string) => {
  let errorDetail1 = '';
  let errorDetail2 = '';
  try {
    if (!errorDetailStr || errorDetailStr.length <= PROP_MAXLEN) {
      return {
        errorDetail1,
        errorDetail2,
      };
    }
    const detailLen = errorDetailStr.length;
    errorDetail1 = errorDetailStr.substring(PROP_MAXLEN, PROP_MAXLEN + PROP_MAXLEN);
    if (detailLen > PROP_MAXLEN + PROP_MAXLEN) {
      errorDetail2 = errorDetailStr.substring(detailLen - PROP_MAXLEN, detailLen);
    }
    return {
      errorDetail1,
      errorDetail2,
    };
  } catch (ex) {
    return {
      errorDetail1,
      errorDetail2,
    };
  }
};

const ErrSvg = () => (
  <svg width="150" height="150" viewBox="0 0 150 150" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_2447_3581)">
      <path
        d="M52.1374 104.606C60.1077 104.606 66.0893 106.511 69.704 108.108C73.6234 109.842 75.6856 111.596 75.7066 111.612L75.8721 111.757L76.0902 111.778L78.3993 111.988V145.185H6.5201C7.0455 138.092 9.03674 131.64 12.4492 126.026C15.3813 121.267 19.2192 117.129 23.7451 113.848C31.7311 107.969 39.5963 106.051 39.6672 106.035C43.7604 105.106 47.9428 104.627 52.1401 104.606M52.1401 103.923C47.8924 103.941 43.6595 104.426 39.5175 105.368C39.5175 105.368 7.74164 112.931 5.7793 145.868H79.0718V111.363L76.1427 111.1C76.1427 111.1 67.8467 103.926 52.1269 103.926L52.1401 103.923Z"
        fill="#373B52"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M74.9765 137.766C75.0369 137.664 80.7138 128.309 94.6971 126.208C95.614 126.208 109.098 125.884 123.26 112.81C125.785 111.103 132.244 105.381 138.783 95.8136C140.191 93.7578 141.906 91.9301 143.869 90.3941L143.821 145.387L70.1113 145.503L74.9765 137.766Z"
        fill="#4C6AFF"
      />
      <path
        d="M143.524 91.1059L143.48 145.043L70.7283 145.158L75.2651 137.947C75.2782 137.924 76.681 135.583 79.7756 133.024C82.6206 130.66 87.5173 127.642 94.7125 126.56C95.6766 126.56 109.245 126.202 123.462 113.088C124.142 112.623 131.08 107.703 139.053 96.0131C140.309 94.1831 141.812 92.5353 143.519 91.1164M144.205 89.711C141.987 91.349 140.059 93.3469 138.501 95.6217C130.248 107.706 123.047 112.539 123.047 112.539C108.767 125.732 95.2143 125.863 94.6757 125.863H94.66C80.3193 128.002 74.6766 137.588 74.6766 137.588L69.4805 145.847L144.152 145.729L144.22 89.7005L144.205 89.711Z"
        fill="#373B52"
      />
      <path
        d="M124.313 103.92C124.376 103.921 124.436 103.94 124.488 103.975C124.539 104.01 124.579 104.059 124.603 104.117C124.626 104.174 124.632 104.238 124.62 104.299C124.607 104.36 124.577 104.416 124.533 104.459C124.489 104.503 124.432 104.533 124.371 104.545C124.31 104.557 124.247 104.55 124.19 104.526C124.132 104.503 124.083 104.462 124.049 104.41C124.014 104.359 123.996 104.298 123.996 104.236C123.996 104.194 124.004 104.153 124.02 104.114C124.036 104.076 124.059 104.041 124.089 104.012C124.118 103.982 124.154 103.959 124.192 103.944C124.231 103.928 124.272 103.92 124.313 103.92ZM118.918 100.97L117.187 101.104V103.24L118.918 100.973V100.97ZM124.313 103.24C124.116 103.24 123.923 103.298 123.759 103.408C123.595 103.518 123.467 103.674 123.391 103.856C123.316 104.039 123.296 104.239 123.334 104.433C123.373 104.627 123.468 104.804 123.608 104.944C123.747 105.084 123.925 105.179 124.119 105.217C124.312 105.256 124.513 105.236 124.696 105.16C124.878 105.085 125.034 104.957 125.144 104.793C125.253 104.629 125.312 104.436 125.312 104.238C125.311 103.974 125.206 103.72 125.019 103.533C124.832 103.346 124.578 103.241 124.313 103.24Z"
        fill="#373B52"
      />
      <path fill-rule="evenodd" clip-rule="evenodd" d="M111.429 91.952L113.247 91.4318V93.8591L111.429 91.952Z" fill="#386EEF" />
      <path d="M112.905 91.8862V92.9948L112.064 92.1147L112.905 91.8757M113.588 90.9694L110.79 91.7575L113.588 94.6892V90.9589V90.9694Z" fill="#373B52" />
      <path fill-rule="evenodd" clip-rule="evenodd" d="M95.5742 86.1858L99.4543 87.0474L97.1241 91.424L95.5742 86.1858Z" fill="white" />
      <path d="M96.0655 86.6454L98.942 87.2838L97.2161 90.5254L96.0655 86.6454ZM95.083 85.726L97.0322 92.3196L99.9665 86.803L95.0961 85.726H95.083Z" fill="#373B52" />
      <path fill-rule="evenodd" clip-rule="evenodd" d="M101.701 125.417L106.459 123.898L103.12 127.947L101.701 125.417Z" fill="black" />
      <path d="M105.455 124.576L103.172 127.345L102.203 125.614L105.455 124.576ZM107.459 123.221L101.199 125.217L103.064 128.548L107.459 123.221Z" fill="#373B52" />
      <path
        d="M68.0381 86.0884C68.0381 86.0884 68.4742 93.1813 77.9102 90.9799C77.9102 90.9799 90.0074 88.0009 92.8052 98.1541"
        stroke="#373B52"
        stroke-width="0.683012"
      />
      <path
        d="M119.183 109.497C119.183 109.497 120.935 108.657 121.599 110.249C121.599 110.249 122.367 112.292 124.313 111.063C126.168 109.894 127.266 108.625 127.912 112.4C128.5 115.844 129.717 117.284 132.838 113.94C135.958 110.595 138.157 110.685 141.244 116.588"
        stroke="#373B52"
        stroke-width="0.683012"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M83.3223 26.8187C83.0911 26.8187 82.8651 26.7502 82.6729 26.6217C82.4806 26.4933 82.3308 26.3107 82.2423 26.0971C82.1538 25.8835 82.1307 25.6484 82.1758 25.4217C82.2209 25.1949 82.3322 24.9866 82.4957 24.8231C82.6592 24.6596 82.8675 24.5483 83.0943 24.5032C83.321 24.4581 83.5561 24.4812 83.7697 24.5697C83.9833 24.6582 84.1659 24.808 84.2943 25.0003C84.4228 25.1925 84.4913 25.4185 84.4913 25.6497C84.4906 25.9595 84.3672 26.2565 84.1482 26.4756C83.9291 26.6946 83.6321 26.818 83.3223 26.8187Z"
        fill="#386EEF"
      />
      <path
        d="M83.3221 24.8249C83.4855 24.8264 83.6448 24.8763 83.7799 24.9683C83.915 25.0603 84.0199 25.1902 84.0812 25.3417C84.1426 25.4932 84.1577 25.6595 84.1246 25.8195C84.0916 25.9796 84.0119 26.1263 83.8956 26.2411C83.7793 26.356 83.6316 26.4338 83.4712 26.4648C83.3107 26.4958 83.1446 26.4786 82.9939 26.4153C82.8432 26.3521 82.7146 26.2456 82.6244 26.1093C82.5341 25.9731 82.4862 25.8132 82.4867 25.6497C82.4874 25.4307 82.5749 25.2209 82.73 25.0663C82.8851 24.9117 83.0952 24.8249 83.3142 24.8249M83.3142 24.1418C83.0154 24.1418 82.7232 24.2305 82.4748 24.3966C82.2263 24.5627 82.0327 24.7988 81.9184 25.0749C81.8042 25.3511 81.7744 25.6549 81.8329 25.948C81.8914 26.2411 82.0355 26.5102 82.2471 26.7214C82.4586 26.9325 82.728 27.0762 83.0211 27.1342C83.3143 27.1921 83.6181 27.1619 83.8941 27.0471C84.17 26.9324 84.4058 26.7384 84.5714 26.4896C84.7371 26.2409 84.8252 25.9486 84.8247 25.6497C84.824 25.2496 84.6646 24.866 84.3814 24.5833C84.0982 24.3006 83.7144 24.1418 83.3142 24.1418Z"
        fill="#373B52"
      />
      <path
        d="M70.185 24.8617C70.3409 24.8617 70.4933 24.9079 70.6229 24.9945C70.7525 25.0811 70.8535 25.2042 70.9131 25.3482C70.9728 25.4922 70.9884 25.6506 70.958 25.8035C70.9276 25.9564 70.8525 26.0968 70.7423 26.207C70.6321 26.3172 70.4917 26.3923 70.3388 26.4227C70.1859 26.4531 70.0275 26.4375 69.8834 26.3779C69.7394 26.3182 69.6164 26.2172 69.5298 26.0876C69.4432 25.958 69.397 25.8056 69.397 25.6498C69.397 25.4407 69.48 25.2403 69.6278 25.0925C69.7756 24.9447 69.976 24.8617 70.185 24.8617ZM70.185 24.1787C69.8932 24.1776 69.6077 24.2632 69.3646 24.4247C69.1215 24.5861 68.9318 24.816 68.8195 25.0854C68.7072 25.3547 68.6774 25.6513 68.7339 25.9376C68.7904 26.2239 68.9306 26.487 69.1368 26.6935C69.3429 26.9001 69.6058 27.0407 69.892 27.0977C70.1781 27.1547 70.4748 27.1255 70.7444 27.0137C71.0139 26.9019 71.2442 26.7126 71.4061 26.4698C71.5679 26.227 71.654 25.9416 71.6535 25.6498C71.6535 25.2601 71.4989 24.8863 71.2236 24.6105C70.9482 24.3347 70.5747 24.1794 70.185 24.1787Z"
        fill="#373B52"
      />
      <path
        d="M74.6665 24.8617C74.8224 24.8617 74.9747 24.9079 75.1043 24.9945C75.2339 25.0811 75.3349 25.2042 75.3946 25.3482C75.4542 25.4922 75.4698 25.6506 75.4394 25.8035C75.409 25.9564 75.334 26.0968 75.2237 26.207C75.1135 26.3172 74.9731 26.3923 74.8202 26.4227C74.6674 26.4531 74.5089 26.4375 74.3649 26.3779C74.2209 26.3182 74.0978 26.2172 74.0112 26.0876C73.9246 25.958 73.8784 25.8056 73.8784 25.6498C73.8784 25.4407 73.9614 25.2403 74.1092 25.0925C74.257 24.9447 74.4575 24.8617 74.6665 24.8617ZM74.6665 24.1787C74.3747 24.1776 74.0891 24.2632 73.846 24.4247C73.6029 24.5861 73.4132 24.816 73.3009 25.0854C73.1887 25.3547 73.1589 25.6513 73.2154 25.9376C73.2719 26.2239 73.4121 26.487 73.6182 26.6935C73.8244 26.9001 74.0872 27.0407 74.3734 27.0977C74.6596 27.1547 74.9563 27.1255 75.2258 27.0137C75.4954 26.9019 75.7256 26.7126 75.8875 26.4698C76.0494 26.227 76.1355 25.9416 76.135 25.6498C76.135 25.2601 75.9803 24.8863 75.705 24.6105C75.4297 24.3347 75.0562 24.1794 74.6665 24.1787Z"
        fill="#373B52"
      />
      <path
        d="M141.993 28.7152C145.35 20.6098 141.501 11.3174 133.396 7.96004C125.29 4.60268 115.998 8.45171 112.641 16.5571C109.283 24.6625 113.132 33.9549 121.238 37.3122C129.343 40.6696 138.635 36.8205 141.993 28.7152Z"
        fill="#FFC470"
      />
      <path d="M70.9548 16.653L70.6895 20.7826L73.8865 17.7195L71.7534 18.3868L70.9548 16.653Z" fill="#373B52" />
      <path d="M71.7764 18.4413C71.7764 18.4413 81.8482 -2.0832 116.112 6.04202" stroke="#373B52" stroke-width="0.683012" />
      <path d="M117.817 24.2785L128.63 24.5307V11.6979" stroke="#373B52" stroke-width="0.683012" />
      <path d="M6.69629 28.4554H87.5308" stroke="#373B52" stroke-width="0.683012" />
      <path d="M8.54297 25.1191H60.4755" stroke="#373B52" stroke-width="0.683012" />
      <path d="M8.54297 26.564H60.4755" stroke="#373B52" stroke-width="0.683012" />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M101.285 125.343C98.9459 125.862 96.5572 126.126 94.1609 126.131C93.2993 126.131 92.8002 126.092 92.7792 126.092C91.0191 125.929 89.6452 125.22 88.6863 123.99C86.9578 121.758 87.1102 118.474 87.2231 117.284L78.3203 118.264L78.6224 111.673L81.7196 111.426L88.5497 110.375C90.0024 109.295 93.2231 106.907 93.4727 106.792C93.9088 106.592 103.676 104.895 103.736 104.895H103.765C103.949 104.911 104.109 104.924 111.856 113.937L111.938 114.032L112.077 121.027L107.551 123.36L103.043 128.688L101.285 125.343Z"
        fill="white"
      />
      <path
        d="M103.726 105.234C103.93 105.252 111.588 114.165 111.588 114.165L111.719 120.827L107.325 123.092L103.098 128.083L101.461 124.954C99.0657 125.505 96.6161 125.786 94.1582 125.792C93.2991 125.792 92.8026 125.753 92.8026 125.753C86.2799 125.149 87.6144 116.9 87.6144 116.9L78.6827 117.883L78.9454 111.99L81.7431 111.767L88.6704 110.703C88.6704 110.703 93.3517 107.22 93.5986 107.104C93.8455 106.989 103.429 105.239 103.72 105.239M103.72 104.556C103.479 104.556 100.76 105.047 98.5189 105.457C93.5697 106.366 93.4095 106.44 93.3149 106.484C93.2203 106.529 93.0049 106.626 88.3972 110.052L81.6643 111.089L78.8902 111.31L78.2886 111.357L78.2624 111.959L77.9997 117.854L77.9629 118.642L78.751 118.555L86.8447 117.665C86.7475 119.128 86.7895 122.096 88.4209 124.193C89.4375 125.506 90.8928 126.257 92.7448 126.428C92.7764 126.428 93.2886 126.47 94.1634 126.47C96.4964 126.466 98.8225 126.218 101.104 125.729L102.499 128.393L102.969 129.294L103.626 128.519L107.763 123.628L112.037 121.426L112.416 121.232V120.806L112.282 114.144V113.9L112.121 113.714C112.1 113.69 110.183 111.46 108.265 109.248C104.204 104.58 104.172 104.577 103.799 104.546H103.739L103.72 104.556Z"
        fill="#373B52"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M111.526 120.662C107.131 118.516 105.72 113.538 105.707 113.488L105.597 113.086L105.224 113.272C103.738 114.019 102.095 114.403 100.432 114.391C99.7891 114.392 99.1474 114.336 98.5143 114.223C99.3392 113.041 99.6466 111.988 99.4312 111.089C99.3509 110.771 99.204 110.474 99.0002 110.216C98.7964 109.959 98.5404 109.748 98.249 109.597C97.8745 109.394 97.4562 109.285 97.0301 109.279C94.9889 109.279 93.77 111.983 93.5231 112.589C92.0967 113.412 90.3366 113.827 88.2849 113.827C84.8173 113.827 81.2709 112.637 79.2744 111.833C85.122 111.767 87.2604 108.754 87.3497 108.625C88.5624 106.489 89.9368 104.449 91.4609 102.523C94.9863 98.6244 98.8874 96.6436 103.048 96.6436C105.66 96.6609 108.212 97.4247 110.404 98.845C118.942 104.953 117.082 113.556 117.063 113.63C115.873 119.84 112.154 120.578 111.526 120.662Z"
        fill="#373B52"
      />
      <path
        d="M103.056 96.9851C105.602 96.9989 108.089 97.7419 110.225 99.1261C113.717 101.624 115.876 104.803 116.643 108.583C116.995 110.22 117.031 111.909 116.748 113.559V113.582C115.64 119.283 112.364 120.181 111.586 120.315C107.412 118.214 106.054 113.451 106.041 113.404L105.823 112.597L105.079 112.96C103.641 113.683 102.052 114.054 100.442 114.042C99.9937 114.043 99.5453 114.015 99.1001 113.958C99.7568 112.87 99.9854 111.88 99.7726 111C99.6839 110.636 99.5182 110.295 99.2866 110C99.0551 109.705 98.7631 109.463 98.4302 109.29C98.006 109.059 97.5315 108.935 97.0484 108.93C94.9074 108.93 93.6202 111.528 93.2708 112.345C91.9153 113.099 90.2446 113.48 88.3032 113.48C85.6369 113.48 82.918 112.763 80.9188 112.072C85.7288 111.528 87.5651 108.935 87.6491 108.814L87.6649 108.793L87.678 108.77C88.8745 106.661 90.2305 104.648 91.7341 102.746C95.199 98.9186 99.0108 96.9799 103.067 96.9799M103.067 96.2969C99.6518 96.2969 95.4486 97.6104 91.2166 102.3C89.6827 104.231 88.3019 106.279 87.087 108.426C87.087 108.426 84.9854 111.489 79.0957 111.489C78.5931 111.489 78.0677 111.465 77.5195 111.418C77.5195 111.418 82.9652 114.163 88.3138 114.163C90.2498 114.163 92.1754 113.803 93.8304 112.821C93.8304 112.821 95.023 109.616 97.0642 109.616C97.4404 109.622 97.8093 109.72 98.1386 109.902C98.1386 109.902 100.605 111.047 97.9547 114.436C98.7733 114.64 99.6147 114.738 100.458 114.728C102.175 114.736 103.87 114.34 105.405 113.572C105.405 113.572 106.826 118.786 111.492 121.009C111.492 121.009 116.078 120.704 117.442 113.703C117.442 113.703 119.47 104.874 110.648 98.564C108.399 97.0915 105.771 96.3039 103.083 96.2969H103.067Z"
        fill="#373B52"
      />
      <path
        d="M101.301 100.97C101.301 100.97 106.192 100.432 107.39 103.776C108.588 107.12 105.084 109.453 103.699 107.908C102.315 106.363 104.062 101.109 109.169 103.34C112.815 104.932 111.683 110.433 107.876 109.592C104.07 108.751 109.999 104.377 112.72 106.568C115.836 109.077 112.352 114.344 108.753 113.745C105.155 113.146 105.972 108.331 109.513 108.657C112.634 108.946 113.852 115.587 111.315 117.021"
        stroke="white"
        stroke-width="0.683012"
      />
      <path fill-rule="evenodd" clip-rule="evenodd" d="M76.3188 111.373L78.7408 111.864V128.225L74.1699 131.083L76.3188 111.373Z" fill="#4C6AFF" />
      <path
        d="M76.6183 111.783L78.3994 112.145V128.036L74.585 130.421L76.6183 111.77M76.0193 110.95L73.7549 131.732L79.0719 128.417V111.586L76.0088 110.963L76.0193 110.95Z"
        fill="#373B52"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M30.8565 51.0788C27.3222 51.0707 23.9017 52.3281 21.2142 54.6233C18.5266 56.9186 16.7495 60.1001 16.2044 63.5921C15.6593 67.0842 16.3823 70.6559 18.2425 73.6611C20.1028 76.6662 22.9773 78.9061 26.3459 79.9755C26.3459 79.9755 27.9799 75.5386 29.0911 73.1638C30.2023 70.789 31.3241 67.5683 35.3775 63.5044C37.71 61.1635 40.703 59.5923 43.9545 59.0018C42.7017 56.612 40.819 54.6104 38.5103 53.2139C36.2015 51.8173 33.5547 51.079 30.8565 51.0788Z"
        fill="#33D0DE"
      />
      <path
        d="M86.8477 23.7189V28.9334C86.8477 28.9702 87.0027 32.7163 85.4554 37.7469C83.369 44.4738 79.2231 50.3757 73.6025 54.6199C71.7121 56.0845 69.548 57.1563 67.2374 57.7723C65.0778 58.3188 62.8552 58.5759 60.6279 58.5368C58.7339 58.5368 56.7952 58.4002 54.9221 58.2741C53.0491 58.148 51.1314 58.0114 49.2531 58.0114C45.6594 58.0114 40.9782 58.4422 36.6437 61.7916C32.367 65.0963 28.9099 70.8257 26.0727 79.3056V79.3214V79.3371C24.8083 83.5005 23.1052 87.5177 20.9922 91.3214C19.0272 94.7706 16.8967 97.5473 14.6559 99.5622C12.1235 101.832 9.4414 103.116 6.6752 103.392L6.75401 23.7268H86.8477M87.5307 23.0438H6.071L5.99219 104.123C19.9519 103.613 26.7242 79.5184 26.7242 79.5184C32.7663 61.4448 40.7444 58.6891 49.2531 58.6891C52.9808 58.6891 56.8135 59.2145 60.6279 59.2145C65.1805 59.2145 69.7094 58.4632 74.0255 55.1637C88.2531 44.2749 87.5386 28.894 87.5386 28.894V23.0359L87.5307 23.0438Z"
        fill="#373B52"
      />
      <path fill-rule="evenodd" clip-rule="evenodd" d="M115.393 128.081L119.183 137.27L125.42 131.745L115.393 128.081Z" fill="#33D0DE" />
      <path d="M49.6313 118.849C49.6313 118.849 56.7477 118.849 57.6751 128.643L57.88 145.537H43.957V130.44" stroke="#373B52" stroke-width="0.683012" />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M39.3516 105.985C39.3516 105.985 22.8358 114.079 20.1458 145.534L6.04688 145.56C6.04688 145.56 7.46806 112.878 39.3516 105.985Z"
        fill="#373B52"
        stroke="#373B52"
        stroke-width="0.683012"
        stroke-miterlimit="10"
      />
    </g>
    <defs>
      <clipPath id="clip0_2447_3581">
        <rect width="150" height="150" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

interface ErrorBoundaryProps {
  /**
   * 点击恢复之后的回调
   * 通过重置一些状态，来尝试恢复崩溃的业务
   * 此回调表示业务UI已经崩溃，尽可能的重置状态以恢复应用
   */
  onReset?: () => null | undefined | boolean;
  /**
   * 模块名称，用于上报打点的时候显示具体的业务模块
   */
  name?: string;
  /**
   * 额外的附加信息，用于上报打点的时候提供更详细的业务信息
   */
  extraInfo?: object;
  /**
   * 是否隐式崩溃处理
   * 有些微小的UI崩溃之后并没有空间展示错误样式
   * 所以崩溃后消失即可
   * @default true
   */
  errorVisiable?: boolean;
}

interface ErrorBoundaryState {
  hasError: boolean;
}

class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {
  constructor(props: ErrorBoundaryProps) {
    super(props);
    this.state = { hasError: false };
    this.handleReset = this.handleReset.bind(this);
    this.reset = this.reset.bind(this);
  }

  static getDerivedStateFromError() {
    return { hasError: true };
  }

  static defaultProps = {
    errorVisiable: true,
  };

  componentDidCatch(error, errorInfo) {
    if (env !== 'local') {
      errorReportApi.doReportMessage(error);
    }
    const { name, extraInfo } = this.props;
    try {
      // 尝试后去erro stack，stack中包含行号
      const errorDetail = error?.stack ? error?.stack + '' : errorInfo;
      // 直接传递error无效，因为error对象无法被序列化
      // loggerApi.track('web_page_error', { error: error+'' , errorDetail, name,  extraInfo });
      // 错误打点
      let errorDetail1 = '';
      let errorDetail2 = '';
      if (errorDetail && typeof errorDetail === 'string' && errorDetail.length > PROP_MAXLEN) {
        const res = getMoreErrorDetail(errorDetail);
        errorDetail1 = res.errorDetail1 || '';
        errorDetail2 = res.errorDetail2 || '';
      }
      trackerApi.track('web_page_error', { error: error + '', errorDetail, name, extraInfo, errorDetail1, errorDetail2 });
    } catch (e) {
      console.error('[ErrorBoundary track error]', e);
    }
    console.error('[ErrorBoundary track error]', error, errorInfo);
  }

  // 处理重试的点击事件
  handleReset() {
    let reset = true;
    if (this.props?.onReset) {
      try {
        reset = this.props?.onReset() === false;
      } catch (e) {
        console.error('[ErrorBoundary error]:', e);
      }
    }
    // 重新加载对应业务组件，业务组件的内部状态会重置。外部可以有自己的处理，返回false则拦截内部状态
    if (reset !== false) {
      this.setState({ hasError: false });
    }
  }

  // 提供给外部，主动的回复错误
  reset() {
    if (this.state.hasError) {
      this.setState({ hasError: false });
    }
  }

  render() {
    if (this.state.hasError && this.props.errorVisiable) {
      return (
        <div style={{ display: 'flex', width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>
          <div>
            <ErrSvg />
          </div>
          <div style={{ color: '#7A8599', fontSize: '14', marginTop: 15 }}>哎呀，崩溃了&gt;.&lt;</div>
          <Button btnType="primary" onClick={this.handleReset} style={{ marginTop: 24 }}>
            点此刷新
          </Button>
        </div>
      );
    }
    if (!this.state.hasError) {
      return this.props.children;
    }
    return <></>;
  }
}

export default ErrorBoundary;
